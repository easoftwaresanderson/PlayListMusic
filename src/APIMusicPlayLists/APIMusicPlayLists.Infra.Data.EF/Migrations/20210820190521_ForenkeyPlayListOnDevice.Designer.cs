// <auto-generated />
using System;
using APIMusicPlayList.Infra.Data.EF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APIMusicPlayLists.Infra.Data.EF.Migrations
{
    [DbContext(typeof(MusicPlayListDBContext))]
    [Migration("20210820190521_ForenkeyPlayListOnDevice")]
    partial class ForenkeyPlayListOnDevice
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0-preview.3.21201.2");

            modelBuilder.Entity("APIMusicPlayLists.Core.Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DeviceType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Idiom")
                        .HasColumnType("TEXT");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Platform")
                        .HasColumnType("TEXT");

                    b.Property<string>("UniqueID")
                        .HasColumnType("TEXT");

                    b.Property<string>("VersionString")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("APIMusicPlayLists.Core.Entities.Music", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlbumImage")
                        .HasColumnType("TEXT");

                    b.Property<string>("AlbumName")
                        .HasColumnType("TEXT");

                    b.Property<string>("AlbumNotes")
                        .HasColumnType("TEXT");

                    b.Property<int>("AlbumYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArtistName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Favorite")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MusicName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlayListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayListId");

                    b.ToTable("Music");
                });

            modelBuilder.Entity("APIMusicPlayLists.Core.Entities.PlayList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayListName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PlayList");
                });

            modelBuilder.Entity("APIMusicPlayLists.Core.Entities.Music", b =>
                {
                    b.HasOne("APIMusicPlayLists.Core.Entities.PlayList", null)
                        .WithMany("PlayListMusics")
                        .HasForeignKey("PlayListId");
                });

            modelBuilder.Entity("APIMusicPlayLists.Core.Entities.PlayList", b =>
                {
                    b.Navigation("PlayListMusics");
                });
#pragma warning restore 612, 618
        }
    }
}
